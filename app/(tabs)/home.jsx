import { LinearGradient } from 'expo-linear-gradient';
import { useRouter } from 'expo-router';
import React, { useEffect, useState } from 'react';
import {
  Dimensions,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  TouchableOpacity,
  View
} from 'react-native';
import PrayerTimesScreen from "../../components/PrayerTimesScreen";

const { width } = Dimensions.get('window');

// Dummy Data in Bangla
const HADITHS = [
  { id: 1, text: "‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶Æ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶π‡¶≤ ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø‡¶¶‡ßá‡¶∞ ‡¶â‡¶™‡¶ï‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá‡•§", source: "‡¶®‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶∏‡¶æ.)" },
  { id: 2, text: "‡¶¶‡¶Ø‡¶º‡¶æ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ö‡¶ø‡¶π‡ßç‡¶®, ‡¶Ü‡¶∞ ‡¶Ø‡ßá ‡¶¶‡¶Ø‡¶º‡¶æ‡¶≤‡ßÅ ‡¶®‡¶Ø‡¶º, ‡¶§‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏ ‡¶®‡ßá‡¶á‡•§", source: "‡¶®‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶∏‡¶æ.)" },
  { id: 3, text: "‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏‡ßÄ ‡¶∏‡ßá ‡¶®‡¶Ø‡¶º ‡¶Ø‡ßá ‡¶≠‡ßÅ‡¶Å‡¶°‡¶º‡¶ø ‡¶≠‡¶∞‡ßç‡¶§‡¶ø ‡¶ñ‡¶æ‡¶Ø‡¶º ‡¶Ø‡¶ñ‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶¨‡ßá‡¶∂‡ßÄ ‡¶ï‡ßç‡¶∑‡ßÅ‡¶ß‡¶æ‡¶∞‡ßç‡¶§ ‡¶•‡¶æ‡¶ï‡ßá‡•§", source: "‡¶®‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶∏‡¶æ.)" },
  { id: 4, text: "‡¶≠‡¶æ‡¶≤ ‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡ßÅ‡¶® ‡¶¨‡¶æ ‡¶®‡ßÄ‡¶∞‡¶¨ ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®‡•§", source: "‡¶®‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶∏‡¶æ.)" },
  { id: 5, text: "‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶ï‡¶æ‡¶õ‡ßá ‡¶∏‡¶¨‡¶ö‡ßá‡¶Ø‡¶º‡ßá ‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶ï‡¶æ‡¶ú ‡¶π‡¶≤‡ßã ‡¶ß‡¶æ‡¶∞‡¶æ‡¶¨‡¶æ‡¶π‡¶ø‡¶ï‡¶§‡¶æ, ‡¶Ø‡¶¶‡¶ø‡¶ì ‡¶§‡¶æ ‡¶∏‡¶æ‡¶Æ‡¶æ‡¶®‡ßç‡¶Ø ‡¶π‡¶Ø‡¶º‡•§", source: "‡¶®‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶ø‡¶Æ (‡¶∏‡¶æ.)" },
];

const DAILY_TASKS_DEFAULT = [
  { id: 1, title: '‡¶∏‡¶ï‡¶æ‡¶≤ ‡¶ß‡¶ø‡¶ï‡¶∞', description: '‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∏‡ßç‡¶Æ‡¶∞‡¶£ ‡¶™‡¶æ‡¶† ‡¶ï‡¶∞‡ßÅ‡¶®' },
  { id: 2, title: '‡¶ï‡ßã‡¶∞‡¶Ü‡¶® ‡¶™‡¶æ‡¶†', description: '‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¶‡¶ø‡¶® ‡ßß ‡¶™‡ßÉ‡¶∑‡ßç‡¶†‡¶æ' },
  { id: 3, title: '‡¶§‡¶∏‡¶¨‡ßÄ‡¶π', description: '‡¶∏‡ßÅ‡¶¨‡¶π‡¶æ‡¶®‡¶æ‡¶≤‡ßç‡¶≤‡¶æ‡¶π x100' },
  { id: 4, title: '‡¶á‡¶∏‡ßç‡¶§‡¶ø‡¶ó‡¶´‡¶æ‡¶∞', description: '‡¶Æ‡¶æ‡¶´ ‡¶ö‡¶æ‡¶á‡¶§‡ßá ‡¶π‡¶¨‡ßá' },
  { id: 5, title: '‡¶¶‡¶∞‡ßÅ‡¶¶ ‡¶∂‡¶∞‡ßÄ‡¶´', description: '‡¶®‡¶¨‡ßÄ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Ü‡¶∂‡ßÄ‡¶∞‡ßç‡¶¨‡¶æ‡¶¶ ‡¶™‡¶æ‡¶† ‡¶ï‡¶∞‡ßÅ‡¶®' },
];

const APP_SECTIONS = [
  { id: 1, title: '‡¶π‡¶æ‡¶¶‡¶ø‡¶∏', icon: 'üìñ', color: '#2E7D32', route: '/hadis' },
  { id: 2, title: '‡¶¶‡ßã‡¶Ø‡¶º‡¶æ', icon: 'ü§≤', color: '#1976D2', route: '/duas' },
  { id: 3, title: '‡¶§‡¶æ‡¶∏‡¶¨‡¶ø‡¶π', icon: 'üìø', color: '#7B1FA2', route: '/tasbih' },
  { id: 4, title: '‡¶ú‡¶æ‡¶ï‡¶æ‡¶§', icon: 'üí∞', color: '#F57C00', route: '/zakat' },
  { id: 5, title: '‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶®‡ßã‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶Ü‡¶Æ‡¶≤', icon: 'üìö', color: '#5D4037', route: '/kitab' },
  { id: 6, title: '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π', icon: '‚ù§Ô∏è', color: '#C62828', route: '/sunnah' },
  { id: 7, title: '‡¶ó‡ßã‡¶∏‡¶≤‡ßá‡¶∞ ‡¶Ü‡¶Æ‡¶≤', icon: 'üí∞', color: '#F57C00', route: '/gosol' },
  { id: 8, title: '‡¶Ü‡¶∞‡¶¨‡¶ø ‡¶≠‡¶æ‡¶∑‡¶æ', icon: 'üìö', color: '#5D4037', route: '/arbi' },
  { id: 9, title: '‡¶∞‡¶Æ‡¶ú‡¶æ‡¶®', icon: '‚ù§Ô∏è', color: '#C62828', route: '/ramadan' },
];

// Sunnah Section
const SUNNAHS = [
  { id: 1, title: '‡¶Æ‡ßá‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶ï', icon: 'üåø', color: '#4CAF50' },
  { id: 2, title: '‡¶°‡¶æ‡¶® ‡¶¶‡¶ø‡¶ï ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ', icon: '‚û°Ô∏è', color: '#2196F3' },
  { id: 3, title: '‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶ì ‡¶™‡¶∞‡ßá ‡¶π‡¶æ‡¶§ ‡¶ß‡ßã‡¶Ø‡¶º‡¶æ', icon: 'üíß', color: '#9C27B0' },
  { id: 4, title: '‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶§‡¶ø‡¶® ‡¶Ü‡¶ô‡ßÅ‡¶≤ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞', icon: '‚úã', color: '#FF9800' },
  { id: 5, title: '‡¶∂‡ßÅ‡¶Ø‡¶º‡ßá ‡¶°‡¶æ‡¶® ‡¶ï‡¶æ‡¶§ ‡¶π‡¶Ø‡¶º‡ßá ‡¶ò‡ßÅ‡¶Æ‡¶æ‡¶®‡ßã', icon: 'üõå', color: '#5D4037' },
  { id: 6, title: '‡¶ú‡ßã‡¶∞‡ßá ‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ', icon: 'üó£Ô∏è', color: '#E91E63' },
  { id: 7, title: '‡¶π‡¶æ‡¶∏‡¶ø‡¶Æ‡ßÅ‡¶ñ‡ßá ‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡¶æ', icon: 'üòä', color: '#00BCD4' },
  { id: 8, title: '‡¶™‡ßã‡¶∂‡¶æ‡¶ï ‡¶™‡¶∞‡¶ø‡¶ß‡¶æ‡¶®‡ßá ‡¶∏‡¶§‡¶∞‡ßç‡¶ï‡¶§‡¶æ', icon: 'üëï', color: '#607D8B' },
  { id: 9, title: '‡¶∞‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ï‡¶∞‡¶æ', icon: 'üè•', color: '#8BC34A' },
];

const IslamicAppHome = () => {
  const router = useRouter();

  const [currentHadithIndex, setCurrentHadithIndex] = useState(0);
  const [completedTasks, setCompletedTasks] = useState(new Set());
  const [tasks, setTasks] = useState(DAILY_TASKS_DEFAULT);
  const [userName] = useState('‡¶Ü‡¶¨‡ßç‡¶¶‡ßÅ‡¶≤‡ßç‡¶≤‡¶æ‡¶π ‡¶Ü‡¶≤ ‡¶ï‡¶æ‡¶ì‡¶∏‡¶æ‡¶∞');

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentHadithIndex(prev => (prev === HADITHS.length - 1 ? 0 : prev + 1));
    }, 4000);
    return () => clearInterval(interval);
  }, []);

  const toggleTask = (taskId) => {
    setCompletedTasks(prev => {
      const newSet = new Set(prev);
      newSet.has(taskId) ? newSet.delete(taskId) : newSet.add(taskId);
      return newSet;
    });
  };

  const handleSectionPress = (section) => {
    if (section.route) router.push(section.route);
  };

  const renderHadithSlider = () => (
    <View style={styles.hadithContainer}>
      <Text style={styles.sectionTitle}>‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶π‡¶æ‡¶¶‡¶ø‡¶∏</Text>
      <LinearGradient
        colors={['#4CAF50', '#2E7D32']}
        style={styles.hadithCard}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 1 }}
      >
        <Text style={styles.hadithText}>"{HADITHS[currentHadithIndex].text}"</Text>
        <Text style={styles.hadithSource}>- {HADITHS[currentHadithIndex].source}</Text>
        <View style={styles.hadithIndicator}>
          {HADITHS.map((_, index) => (
            <View key={index} style={[styles.dot, index === currentHadithIndex && styles.activeDot]} />
          ))}
        </View>
      </LinearGradient>
    </View>
  );

  const renderQuickAccess = () => (
    <View style={styles.quickAccessContainer}>
      <TouchableOpacity style={styles.quickAccessCardWrapper} onPress={() => router.push('/amol')}>
        <LinearGradient colors={['#4CAF50', '#8BC34A']} style={styles.quickAccessCard}>
          <Text style={styles.quickAccessIcon}>üåô</Text>
          <Text style={styles.quickAccessTitle}>‡¶∏‡¶ï‡¶æ‡¶≤ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶®‡ßç‡¶ß‡ßç‡¶Ø‡¶æ‡¶∞</Text>
          <Text style={styles.quickAccessSubtitle}>‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶ì ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ</Text>
        </LinearGradient>
      </TouchableOpacity>
      <TouchableOpacity style={styles.quickAccessCardWrapper} onPress={() => router.push('/dailyplan')}>
        <LinearGradient colors={['#03A9F4', '#2196F3']} style={styles.quickAccessCard}>
          <Text style={styles.quickAccessIcon}>‚è∞</Text>
          <Text style={styles.quickAccessTitle}>‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞</Text>
          <Text style={styles.quickAccessSubtitle}>‡¶Ü‡¶Æ‡¶≤ ‡¶ì ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ</Text>
        </LinearGradient>
      </TouchableOpacity>
    </View>
  );

  const renderAppSections = () => (
    <View style={styles.sectionsContainer}>
      <Text style={styles.sectionTitle}>‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø</Text>
      <View style={styles.sectionsGrid}>
        {APP_SECTIONS.map(section => (
          <TouchableOpacity
            key={section.id}
            style={[styles.sectionCard, { backgroundColor: section.color }]}
            onPress={() => handleSectionPress(section)}
          >
            <Text style={styles.sectionIcon}>{section.icon}</Text>
            <Text style={styles.sectionText}>{section.title}</Text>
          </TouchableOpacity>
        ))}
      </View>
    </View>
  );

  const renderSunnahSection = () => (
    <View style={styles.sunnahContainer}>
      <Text style={styles.sectionTitle}>‡¶®‡¶¨‡ßÄ (‡¶∏‡¶æ‡¶É) ‡¶è‡¶∞ ‡ßØ‡¶ü‡¶ø ‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π üåô</Text>
      <View style={styles.sunnahGrid}>
        {SUNNAHS.map(sunnah => (
          <TouchableOpacity
            key={sunnah.id}
            style={[styles.sunnahCard, { backgroundColor: sunnah.color }]}
            onPress={() => alert(`${sunnah.title}`)}
          >
            <Text style={styles.sunnahIcon}>{sunnah.icon}</Text>
            <Text style={styles.sunnahText}>{sunnah.title}</Text>
          </TouchableOpacity>
        ))}
      </View>
    </View>
  );

const Preyer = () => {
  return (
    <View style={styles.prayerContainer}>
      <Text style={styles.sectionTitle}>‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º üïå</Text>
      <LinearGradient
        colors={['#fefffeff', '#eeeeeeff']}
        start={{ x: 0, y: 0 }}
        end={{ x: 1, y: 1 }}
        style={styles.prayerCard}
      >
        <PrayerTimesScreen
          latitude={23.8103}
          longitude={90.4125}
          calculation="MuslimWorldLeague"
          madhab="Shafi"
          use12h={true}
        />
      </LinearGradient>
    </View>
  );
};


  return (
    <View style={styles.container}>
      <StatusBar backgroundColor="#2E7D32" barStyle="light-content" />
      <View style={styles.header}>
        <Text style={styles.greeting}>‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ</Text>
        <Text style={styles.userName}>{userName}</Text>
        <Text style={styles.date}>
          {new Date().toLocaleDateString('bn-BD', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}
        </Text>
      </View>

    

      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
        {Preyer()}
        {renderHadithSlider()}
        {renderQuickAccess()}
        {renderAppSections()}
        {renderSunnahSection()}
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#F5F5F5' },
  header: { backgroundColor: '#2E7D32', paddingTop: 50, paddingBottom: 20, paddingHorizontal: 20, borderBottomLeftRadius: 25, borderBottomRightRadius: 25 },
  greeting: { fontSize: 18, color: '#FFFFFF', fontWeight: '400' },
  userName: { fontSize: 28, color: '#FFFFFF', fontWeight: 'bold', marginTop: 5 },
  date: { fontSize: 14, color: '#C8E6C9', marginTop: 5 },
  scrollView: { flex: 1, paddingHorizontal: 20 },
  sectionTitle: { fontSize: 20, fontWeight: 'bold', color: '#2E7D32', marginBottom: 15, marginTop: 20 },

  hadithContainer: { marginTop: 20 },
  hadithCard: {
    borderRadius: 15,
    padding: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3
  },
  hadithText: { fontSize: 16, lineHeight: 24, color: '#FFFFFF', fontStyle: 'italic', marginBottom: 15 },
  hadithSource: { fontSize: 14, color: '#E0E0E0', textAlign: 'right', marginBottom: 15 },
  hadithIndicator: { flexDirection: 'row', justifyContent: 'center', alignItems: 'center' },
  dot: { width: 8, height: 8, borderRadius: 4, backgroundColor: '#E0E0E0', marginHorizontal: 2 },
  activeDot: { backgroundColor: '#FFFFFF' },

  quickAccessContainer: { flexDirection: 'row', justifyContent: 'space-between', marginTop: 20 },
  quickAccessCardWrapper: { width: '48%', borderRadius: 15, overflow: 'hidden', shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.2, shadowRadius: 4, elevation: 5 },
  quickAccessCard: { padding: 20, alignItems: 'center', justifyContent: 'center', height: 120 },
  quickAccessIcon: { fontSize: 30, marginBottom: 8 },
  quickAccessTitle: { fontSize: 16, fontWeight: 'bold', color: '#FFFFFF', marginBottom: 4 },
  quickAccessSubtitle: { fontSize: 12, color: '#FFFFFF', opacity: 0.8 },

  sectionsContainer: { marginTop: 10 },
  sectionsGrid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' },
  sectionCard: { width: (width - 60) / 3, aspectRatio: 1, borderRadius: 15, alignItems: 'center', justifyContent: 'center', marginBottom: 15, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4, elevation: 3 },
  sectionIcon: { fontSize: 28, marginBottom: 8 },
  sectionText: { fontSize: 12, color: '#FFFFFF', fontWeight: 'bold', textAlign: 'center' },

  sunnahContainer: { marginTop: 10 },
  sunnahGrid: { flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-between' },
  sunnahCard: { width: (width - 60) / 3, aspectRatio: 1, borderRadius: 15, alignItems: 'center', justifyContent: 'center', marginBottom: 15, shadowColor: '#000', shadowOffset: { width: 0, height: 2 }, shadowOpacity: 0.1, shadowRadius: 4, elevation: 3 },
  sunnahIcon: { fontSize: 28, marginBottom: 8 },
  sunnahText: { fontSize: 12, color: '#FFFFFF', fontWeight: 'bold', textAlign: 'center' },
  prayerContainer: { marginTop: 20 },
prayerCard: {
  borderRadius: 15,
  padding: 15,
  shadowColor: '#000',
  
  shadowOpacity: 0.2,
  shadowRadius: 4,
  elevation: 5,
},

});

export default IslamicAppHome;
