import React, { useState, useEffect } from 'react';
import {
  Image,
  Linking,
  ScrollView,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
  Dimensions,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import Animated, {
  useSharedValue,
  useAnimatedStyle,
  withTiming,
  withRepeat,
  Easing,
} from 'react-native-reanimated';

// Get screen width for responsive design
const { width } = Dimensions.get('window');

// App Details
const APP_DETAILS = {
  description:
    `‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™, ‡¶Ø‡¶æ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶≠‡¶æ‡¶∑‡¶æ‡¶Ø‡¶º ‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶Ü‡¶Æ‡¶≤, ‡¶ú‡¶ø‡¶ï‡¶ø‡¶∞, ‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π ‡¶è‡¶¨‡¶Ç ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÇ‡¶ö‡ßÄ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡ßá‡•§ ‡¶è‡¶á ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶ü‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç ‡ß®‡ß¶‡ß®‡ß´ ‡¶∏‡¶æ‡¶≤ ‡¶•‡ßá‡¶ï‡ßá ‡¶ú‡¶®‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡•§`,
  features: [
    { title: '‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º', description: 'üåô ‡¶´‡¶ú‡¶∞, ‡¶ú‡ßã‡¶π‡¶∞, ‡¶Ü‡¶∏‡¶∞, ‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨, ‡¶à‡¶∂‡¶æ, ‡¶§‡¶æ‡¶π‡¶æ‡¶ú‡ßç‡¶ú‡ßÅ‡¶¶, ‡¶∏‡¶æ‡¶π‡¶∞‡¶ø ‡¶ì ‡¶á‡¶´‡¶§‡¶æ‡¶∞‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º‡¶∏‡ßÇ‡¶ö‡ßÄ‡•§ ‡¶Ö‡¶ü‡ßã-‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® ‡¶°‡¶ø‡¶ü‡ßá‡¶ï‡¶∂‡¶® ‡¶è‡¶¨‡¶Ç ‡¶ü‡ßç‡¶∞‡¶æ‡¶≠‡ßá‡¶≤‡¶æ‡¶∞ ‡¶Æ‡ßã‡¶° ‡¶∏‡¶π‡•§' },
    { title: '‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®', description: 'üìñ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶¨‡¶æ‡¶¶ ‡¶ì ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£ ‡¶∏‡¶π ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®, ‡ß≠‡ß¶‡¶ü‡¶ø‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø ‡¶Ö‡¶®‡ßÅ‡¶¨‡¶æ‡¶¶ ‡¶è‡¶¨‡¶Ç ‡¶§‡¶æ‡¶´‡¶∏‡ßÄ‡¶∞ (‡¶Æ‡¶æ‡¶ì‡¶≤‡¶æ‡¶®‡¶æ ‡¶Æ‡ßÅ‡¶π‡¶ø‡¶â‡¶¶‡ßç‡¶¶‡¶ø‡¶® ‡¶ñ‡¶æ‡¶®, ‡¶§‡¶æ‡¶´‡¶∏‡ßÄ‡¶∞ ‡¶á‡¶¨‡¶®‡ßá ‡¶ï‡¶æ‡¶∏‡¶ø‡¶∞, ‡¶Æ‡¶æ‡¶∞‡¶ø‡¶´‡ßÅ‡¶≤ ‡¶ï‡ßÅ‡¶∞‡¶Ü‡¶®)‡•§ ‡¶Ö‡¶°‡¶ø‡¶ì ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶´‡¶≤‡¶æ‡¶á‡¶® ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§' },
    { title: '‡¶¶‡ßã‡¶Ø‡¶º‡¶æ ‡¶ì ‡¶ú‡¶ø‡¶ï‡¶ø‡¶∞', description: 'ü§≤ ‡¶π‡¶ø‡¶∏‡¶®‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶∏‡¶≤‡¶ø‡¶Æ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶ï ‡¶Æ‡¶æ‡¶∏‡¶®‡ßÅ‡¶® ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ (‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶∏‡¶ï‡¶æ‡¶≤-‡¶∏‡¶®‡ßç‡¶ß‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶ú‡¶ø‡¶ï‡¶ø‡¶∞, ‡¶ò‡ßÅ‡¶Æ‡ßá‡¶∞ ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ, ‡¶ñ‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¶‡ßã‡¶Ø‡¶º‡¶æ) ‡¶è‡¶¨‡¶Ç ‡¶π‡¶æ‡¶¶‡¶ø‡¶∏‡ßá‡¶∞ ‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶∏ ‡¶∏‡¶π ‡¶Ö‡¶°‡¶ø‡¶ì‡•§' },
    { title: '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π', description: 'üåø ‡¶®‡¶¨‡ßÄ (‡¶∏‡¶æ.)-‡¶è‡¶∞ ‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶æ‡¶π (‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶Æ‡ßá‡¶∏‡¶ì‡¶Ø‡¶º‡¶æ‡¶ï, ‡¶°‡¶æ‡¶® ‡¶¶‡¶ø‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ, ‡¶π‡¶æ‡¶∏‡¶ø‡¶Æ‡ßÅ‡¶ñ‡ßá ‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡¶æ) ‡¶∂‡ßá‡¶ñ‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡•§' },
  ],
  otherFeatures: [
    { title: '‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶§‡¶æ‡¶∏‡¶¨‡¶ø‡¶π ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü‡¶æ‡¶∞', icon: 'üìø' },
    { title: '‡¶π‡¶ú ‡¶ì ‡¶â‡¶Æ‡¶∞‡¶æ‡¶π ‡¶ó‡¶æ‡¶á‡¶°', icon: 'üïã' },
    { title: '‡¶ú‡¶æ‡¶ï‡¶æ‡¶§ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶ü‡¶∞', icon: 'üí∞' },
    { title: '‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ (‡¶®‡ßÇ‡¶∞‡¶æ‡¶®‡¶ø ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø)', icon: 'üïå' },
    { title: '‡ßØ‡ßØ‡¶ü‡¶ø ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶®‡¶æ‡¶Æ', icon: '‚ú®' },
    { title: '‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü', description: 'üáßüá© ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶´‡ßá‡¶∏, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶¨‡¶æ‡¶¶, ‡¶§‡¶æ‡¶´‡¶∏‡ßÄ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶â‡¶ö‡ßç‡¶ö‡¶æ‡¶∞‡¶£‡•§ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡ß¨‡ß™‡¶ü‡¶ø ‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º‡¶ï‡¶∞‡¶£‡•§' },
  ],
  version: '1.0.0',
  quranicVerse: [
    `‚Äú‡¶∏‡ßÅ‡¶§‡¶∞‡¶æ‡¶Ç ‡¶§‡ßã‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶Æ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßã, ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞‡¶ï‡ßá ‡¶∏‡ßç‡¶Æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶¨‡•§ ‡¶Ü‡¶∞ ‡¶§‡ßã‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ï‡ßÉ‡¶§‡¶ú‡ßç‡¶û ‡¶π‡¶ì ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶ï‡ßÉ‡¶§‡¶ú‡ßç‡¶û ‡¶π‡¶Ø‡¶º‡ßã ‡¶®‡¶æ‡•§‚Äù (‡¶∏‡ßÇ‡¶∞‡¶æ ‡¶¨‡¶æ‡¶ï‡¶æ‡¶∞‡¶æ: ‡ßß‡ß´‡ß®)`,
    `‚Äú‡¶è‡¶¨‡¶Ç ‡¶Ø‡¶æ‡¶∞‡¶æ ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶ï‡ßá ‡¶≠‡¶Ø‡¶º ‡¶ï‡¶∞‡ßá, ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡¶• ‡¶ñ‡ßÅ‡¶≤‡ßá ‡¶¶‡ßá‡¶®‡•§‚Äù (‡¶∏‡ßÇ‡¶∞‡¶æ ‡¶§‡¶æ‡¶≤‡¶æ‡¶ï: ‡ß®-‡ß©)`,
    `‚Äú‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º ‡¶ï‡¶∑‡ßç‡¶ü‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶∏‡ßç‡¶¨‡¶∏‡ßç‡¶§‡¶ø ‡¶Ü‡¶õ‡ßá‡•§‚Äù (‡¶∏‡ßÇ‡¶∞‡¶æ ‡¶á‡¶®‡¶∂‡¶ø‡¶∞‡¶æ‡¶π: ‡ß´-‡ß¨)`,
    `‚Äú‡¶Ü‡¶∞ ‡¶Ü‡¶Æ‡¶ø ‡¶§‡ßã ‡¶ï‡ßá‡¶¨‡¶≤ ‡¶Æ‡ßÅ'‡¶Æ‡¶ø‡¶®‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡¶á ‡¶â‡¶™‡¶¶‡ßá‡¶∂ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶•‡¶æ‡¶ï‡¶ø‡•§‚Äù (‡¶∏‡ßÇ‡¶∞‡¶æ ‡¶Ü‡¶Ø-‡¶Ø‡¶æ‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶§: ‡ß´‡ß´)`,
    `‚Äú‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π‡¶∞ ‡¶∞‡¶π‡¶Æ‡¶§ ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶ø‡¶∞‡¶æ‡¶∂ ‡¶π‡¶Ø‡¶º‡ßã ‡¶®‡¶æ‡•§‚Äù (‡¶∏‡ßÇ‡¶∞‡¶æ ‡¶Ø‡ßÅ‡¶Æ‡¶æ‡¶∞: ‡ß´‡ß©)`
  ],
};

// Developer Details
const DEVELOPER_DETAILS = {
  logo: 'https://scontent.fjsr6-1.fna.fbcdn.net/v/t39.30808-6/489085217_1225632368983132_9073890756416247574_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=6ee11a&_nc_eui2=AeEp2EjF5dKG6maYNVO3zPq8_QmJvGbojLn9CYm8ZuiMuVPdNWJoVaZmN0H-BcjyM-f2wgIxKfnYtQc00DxgLKhn&_nc_ohc=4F1nY-uA16AQ7kNvwGFSFbc&_nc_oc=AdlnhcRdKV7NbZ40A5YcYei57JHPmX29RV94D1xT_7zwQCSB4q0yFyQXWwwUUEFKd0Y&_nc_zt=23&_nc_ht=scontent.fjsr6-1.fna&_nc_gid=QSha_HPTVL4DVpLycphY6g&oh=00_AfX50xQQDwRf3PaKNuVVRHi5T_HcauKQkPdKwMIkRwP9uw&oe=68B7D961',
  name: 'Abdullah AL Kawser',
  subtitle: 'üöÄ Software Engineer | ü§ñ Machine Learning | Artificial Intelligence | AI Agent| Deep Learning | Computer Vision',
  contactEmail: 'contact@bytelabs.com',
  website: 'https://bytelabs1.netlify.app/',
};

export default function AboutApp() {
  const float = useSharedValue(0);
  const [verseIndex, setVerseIndex] = useState(0);

  useEffect(() => {
    float.value = withRepeat(
      withTiming(8, { duration: 3000, easing: Easing.inOut(Easing.ease) }),
      -1,
      true
    );
  }, []);

  useEffect(() => {
    const intervalId = setInterval(() => {
      setVerseIndex(prevIndex => (prevIndex + 1) % APP_DETAILS.quranicVerse.length);
    }, 2000);
    return () => clearInterval(intervalId);
  }, []);

  const animatedAppCardStyle = useAnimatedStyle(() => {
    return {
      transform: [{ translateY: float.value }],
    };
  });

  return (
    <LinearGradient
      colors={['#f0f4f8', '#d9e2ec']}
      style={styles.gradientBackground}
      start={{ x: 0, y: 0 }}
      end={{ x: 1, y: 1 }}
    >
      <ScrollView contentContainerStyle={styles.container}>
        {/* Developer Info Section */}
        <View style={styles.card}>
          <View style={styles.developerHeader}>
            <View style={styles.logoContainer}>
              <Image source={{ uri: DEVELOPER_DETAILS.logo }} style={styles.logo} />
            </View>
            <View style={styles.developerTextContainer}>
              <Text style={styles.developerName}>{DEVELOPER_DETAILS.name}</Text>
              <Text style={styles.developerSubtitle}>{DEVELOPER_DETAILS.subtitle}</Text>
            </View>
          </View>
          <View style={styles.buttonContainer}>
            <TouchableOpacity
              style={styles.button}
              onPress={() => Linking.openURL(`mailto:${DEVELOPER_DETAILS.contactEmail}`)}
            >
              <Text style={styles.buttonText}>üìß Email Me</Text>
            </TouchableOpacity>
            <TouchableOpacity
              style={styles.button}
              onPress={() => Linking.openURL(DEVELOPER_DETAILS.website)}
            >
              <Text style={styles.buttonText}>üåê Visit Website</Text>
            </TouchableOpacity>
          </View>
        </View>

        {/* App Info Section */}
        <Animated.View style={[styles.card, animatedAppCardStyle]}>
          <Text style={styles.cardHeader}>About this App</Text>
          <Text style={styles.descriptionText}>{APP_DETAILS.description}</Text>

          {/* Features List */}
          <Text style={styles.featuresHeader}>‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø:</Text>
          {APP_DETAILS.features.map((feature, index) => (
            <View key={index} style={styles.featureItem}>
              <Text style={styles.featureTitle}>{feature.title}</Text>
              <Text style={styles.featureDescription}>{feature.description}</Text>
            </View>
          ))}
          
          {/* Other Features List */}
          <Text style={styles.featuresHeader}>‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø:</Text>
          {APP_DETAILS.otherFeatures.map((feature, index) => (
            <View key={index} style={styles.otherFeatureItem}>
              <Text style={styles.otherFeatureText}>{`${feature.icon || ''} ${feature.title}`}</Text>
            </View>
          ))}

        </Animated.View>

        {/* Quranic Verse */}
        <View style={styles.verseContainer}>
          <Text style={styles.verseTitle}>‡¶è‡¶ï‡¶ü‡¶ø ‡¶¶‡¶ø‡¶ï‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡ßá‡¶∂‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶Ü‡¶Ø‡¶º‡¶æ‡¶§</Text>
          <Text style={styles.quranicVerse}>{APP_DETAILS.quranicVerse[verseIndex]}</Text>
        </View>

        {/* Fixed version info section */}
        <View style={styles.versionContainer}>
          <Text style={styles.versionText}>{`Version ${APP_DETAILS.version}`}</Text>
        </View>
      </ScrollView>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  gradientBackground: {
    flex: 1,
     marginTop: 50,
  },
  container: {
    flexGrow: 1,
    alignItems: 'center',
    padding: width * 0.05,
    paddingBottom: 80,
    backgroundColor: 'transparent',
  },
  card: {
    borderLeftWidth: 4,
    borderLeftColor: '#2cc706ff',
    width: '100%',
    backgroundColor: '#ffffff',
    borderRadius: 20,
    padding: width * 0.06,
    marginBottom: 20,
    shadowColor: '#1e293b',
    shadowOffset: { width: 0, height: 6 },
    shadowOpacity: 0.1,
    shadowRadius: 12,
    elevation: 8,
  },
  cardHeader: {
    fontSize: width * 0.06,
    fontWeight: 'bold',
    color: '#1e293b',
    marginBottom: 10,
    textAlign: 'center',
  },
  descriptionText: {
    fontSize: width * 0.035,
    color: '#475569',
    lineHeight: width * 0.055,
    textAlign: 'justify',
    marginBottom: 20,
  },
  featuresHeader: {
    fontSize: width * 0.045,
    fontWeight: 'bold',
    color: '#3b82f6',
    marginBottom: 10,
  },
  featureItem: {
    marginBottom: 15,
  },
  featureTitle: {
    fontSize: width * 0.04,
    fontWeight: 'bold',
    color: '#1e293b',
    marginBottom: 5,
  },
  featureDescription: {
    fontSize: width * 0.035,
    color: '#475569',
    lineHeight: width * 0.05,
  },
  otherFeatureItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  otherFeatureText: {
    fontSize: width * 0.038,
    color: '#475569',
  },
  developerHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
  },
  logoContainer: {
    width: width * 0.2,
    height: width * 0.2,
    borderRadius: (width * 0.2) / 2,
    borderWidth: 3,
    borderColor: '#3b82f6',
    padding: 2,
    marginRight: 15,
  },
  logo: {
    width: '100%',
    height: '100%',
    borderRadius: (width * 0.2) / 2,
  },
  developerTextContainer: {
    flex: 1,
  },
  developerName: {
    fontSize: width * 0.05,
    fontWeight: 'bold',
    color: '#1e293b',
    marginBottom: 4,
  },
  developerSubtitle: {
    fontSize: width * 0.035,
    color: '#64748b',
    lineHeight: 20,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 10,
    gap: 10,
  },
  button: {
    flex: 1,
    backgroundColor: '#4fe214ff',
    paddingVertical: width * 0.035,
    borderRadius: 12,
    alignItems: 'center',
    elevation: 2,
  },
  buttonText: {
    color: '#ffffff',
    fontWeight: '600',
    fontSize: width * 0.035,
  },
  verseContainer: {
    width: '100%',
    backgroundColor: '#fbfffbff',
    padding: width * 0.05,
    borderRadius: 16,
    borderLeftWidth: 4,
    borderLeftColor: '#33ff00ff',
    
    marginBottom: 20,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 3,
  },
  verseTitle: {
    fontSize: width * 0.04,
    fontWeight: 'bold',
    color: '#000000ff',
    marginBottom: 8,
    textAlign: 'center',
  },
  quranicVerse: {
    fontSize: width * 0.037,
    fontStyle: 'italic',
    textAlign: 'center',
    color: '#000000ff',
    lineHeight: width * 0.06,
  },
  versionContainer: {
    position: 'absolute',
    bottom: 20,
    left: 0,
    right: 0,
    alignItems: 'center',
  },
  versionText: {
    fontSize: width * 0.045,
    fontWeight: 'bold',
    color: '#475569',
    textAlign: 'center',
  },
});